# Script de test pour v√©rifier la configuration avant d√©ploiement
Write-Host "üß™ Test de configuration avant d√©ploiement..." -ForegroundColor Green

$errors = @()

# V√©rifier Node.js
try {
    $nodeVersion = node --version
    Write-Host "‚úÖ Node.js: $nodeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Node.js non trouv√©" -ForegroundColor Red
    $errors += "Node.js"
}

# V√©rifier npm
try {
    $npmVersion = npm --version
    Write-Host "‚úÖ npm: $npmVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå npm non trouv√©" -ForegroundColor Red
    $errors += "npm"
}

# V√©rifier AWS CLI
try {
    $awsVersion = aws --version
    Write-Host "‚úÖ AWS CLI: $awsVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå AWS CLI non trouv√©" -ForegroundColor Red
    $errors += "AWS CLI"
}

# V√©rifier EB CLI
try {
    $ebVersion = eb --version
    Write-Host "‚úÖ EB CLI: $ebVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå EB CLI non trouv√©" -ForegroundColor Red
    $errors += "EB CLI"
}

# V√©rifier les d√©pendances
Write-Host "üì¶ V√©rification des d√©pendances..." -ForegroundColor Yellow

# V√©rifier les d√©pendances du serveur
if (Test-Path "server/node_modules") {
    Write-Host "‚úÖ D√©pendances serveur install√©es" -ForegroundColor Green
} else {
    Write-Host "‚ùå D√©pendances serveur manquantes" -ForegroundColor Red
    $errors += "D√©pendances serveur"
}

# V√©rifier les d√©pendances du client
if (Test-Path "client/node_modules") {
    Write-Host "‚úÖ D√©pendances client install√©es" -ForegroundColor Green
} else {
    Write-Host "‚ùå D√©pendances client manquantes" -ForegroundColor Red
    $errors += "D√©pendances client"
}

# V√©rifier le build React
if (Test-Path "client/build") {
    Write-Host "‚úÖ Build React trouv√©" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  Build React manquant - sera construit lors du d√©ploiement" -ForegroundColor Yellow
}

# V√©rifier les fichiers de configuration
$configFiles = @(
    ".ebextensions/01_nodecommand.config",
    ".ebextensions/02_environment.config",
    ".ebextensions/03_node_modules.config",
    "Dockerfile",
    "docker-compose.yml"
)

foreach ($file in $configFiles) {
    if (Test-Path $file) {
        Write-Host "‚úÖ $file" -ForegroundColor Green
    } else {
        Write-Host "‚ùå $file manquant" -ForegroundColor Red
        $errors += $file
    }
}

# R√©sum√©
Write-Host ""
if ($errors.Count -eq 0) {
    Write-Host "üéâ Configuration OK ! Pr√™t pour le d√©ploiement." -ForegroundColor Green
    Write-Host "üöÄ Lancez: .\deploy-aws.ps1" -ForegroundColor Cyan
} else {
    Write-Host "‚ùå Probl√®mes d√©tect√©s:" -ForegroundColor Red
    foreach ($err in $errors) {
        Write-Host "  - $err" -ForegroundColor Red
    }
    Write-Host ""
    Write-Host "üîß Actions √† effectuer:" -ForegroundColor Yellow
    if ($errors -contains "Node.js") {
        Write-Host "  - Installer Node.js: winget install OpenJS.NodeJS" -ForegroundColor Yellow
    }
    if ($errors -contains "AWS CLI") {
        Write-Host "  - Installer AWS CLI: winget install Amazon.AWSCLI" -ForegroundColor Yellow
    }
    if ($errors -contains "EB CLI") {
        Write-Host "  - Installer EB CLI: pip install awsebcli" -ForegroundColor Yellow
    }
    if ($errors -contains "D√©pendances serveur") {
        Write-Host "  - Installer d√©pendances serveur: cd server; npm install; cd .." -ForegroundColor Yellow
    }
    if ($errors -contains "D√©pendances client") {
        Write-Host "  - Installer d√©pendances client: cd client; npm install; cd .." -ForegroundColor Yellow
    }
} 